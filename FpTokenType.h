#ifndef __FP_TOKENTYPE__
#define __FP_TOKENTYPE__
// This file was automatically generated by EbnfStudio; don't modify it!


#include <QByteArray>

namespace Fp {
	enum TokenType {
		Tok_Invalid = 0,

		TT_Literals,
		Tok_Hash,
		Tok_Lpar,
		Tok_Latt,
		Tok_Rpar,
		Tok_Star,
		Tok_Ratt,
		Tok_2Star,
		Tok_StarEq,
		Tok_Plus,
		Tok_PlusEq,
		Tok_Comma,
		Tok_Minus,
		Tok_MinusEq,
		Tok_Dot,
		Tok_2Dot,
		Tok_Slash,
		Tok_SlashEq,
		Tok_Colon,
		Tok_ColonEq,
		Tok_Semi,
		Tok_Lt,
		Tok_Leq,
		Tok_LtGt,
		Tok_Eq,
		Tok_Gt,
		Tok_GtLt,
		Tok_Geq,
		Tok_At,
		Tok_Lbrack,
		Tok_Rbrack,
		Tok_Hat,
		Tok_Lbrace,
		Tok_Rbrace,

		TT_Keywords,
		Tok_absolute,
		Tok_abstract,
		Tok_alias,
		Tok_and,
		Tok_ansistring,
		Tok_array,
		Tok_as,
		Tok_asm,
		Tok_assembler,
		Tok_at,
		Tok_begin,
		Tok_bitpacked,
		Tok_case,
		Tok_cdecl,
		Tok_class,
		Tok_const,
		Tok_constructor,
		Tok_cppdecl,
		Tok_cvar,
		Tok_dec,
		Tok_default,
		Tok_deprecated,
		Tok_destructor,
		Tok_div,
		Tok_do,
		Tok_downto,
		Tok_dynamic,
		Tok_else,
		Tok_end,
		Tok_enumerator,
		Tok_except,
		Tok_experimental,
		Tok_explicit,
		Tok_export,
		Tok_exports,
		Tok_external,
		Tok_file,
		Tok_final,
		Tok_finalization,
		Tok_finally,
		Tok_for,
		Tok_forward,
		Tok_function,
		Tok_generic,
		Tok_goto,
		Tok_hardfloat,
		Tok_helper,
		Tok_if,
		Tok_implementation,
		Tok_implements,
		Tok_in,
		Tok_inc,
		Tok_index,
		Tok_inherited,
		Tok_initialization,
		Tok_inline,
		Tok_interface,
		Tok_interrupt,
		Tok_iocheck,
		Tok_is,
		Tok_label,
		Tok_library,
		Tok_local,
		Tok_message,
		Tok_mod,
		Tok_ms_abi_cdecl,
		Tok_ms_abi_default,
		Tok_mwpascal,
		Tok_name,
		Tok_nested,
		Tok_nil,
		Tok_nodefault,
		Tok_noreturn,
		Tok_nostackframe,
		Tok_not,
		Tok_object,
		Tok_of,
		Tok_on,
		Tok_operator,
		Tok_or,
		Tok_otherwise,
		Tok_out,
		Tok_overload,
		Tok_override,
		Tok_packed,
		Tok_pascal,
		Tok_platform,
		Tok_private,
		Tok_procedure,
		Tok_program,
		Tok_property,
		Tok_protected,
		Tok_public,
		Tok_published,
		Tok_raise,
		Tok_read,
		Tok_record,
		Tok_register,
		Tok_reintroduce,
		Tok_repeat,
		Tok_resourcestring,
		Tok_safecall,
		Tok_saveregisters,
		Tok_sealed,
		Tok_set,
		Tok_shl,
		Tok_shr,
		Tok_softfloat,
		Tok_specialize,
		Tok_static,
		Tok_stdcall,
		Tok_stored,
		Tok_strict,
		Tok_string,
		Tok_sysv_abi_cdecl,
		Tok_sysv_abi_default,
		Tok_then,
		Tok_threadvar,
		Tok_to,
		Tok_try,
		Tok_type,
		Tok_unimplemented,
		Tok_unit,
		Tok_until,
		Tok_uses,
		Tok_var,
		Tok_varargs,
		Tok_vectorcall,
		Tok_virtual,
		Tok_while,
		Tok_with,
		Tok_write,
		Tok_xor,

		TT_Specials,
		Tok_procedural_constant,
		Tok_ident,
		Tok_unsigned_real,
		Tok_decimal_int,
		Tok_hex_int,
		Tok_octal_int,
		Tok_binary_int,
		Tok_quoted_string,
		Tok_Comment,
		Tok_Directive,
		Tok_Eof,

		TT_MaxToken,

		TT_Max
	};

	const char* tokenTypeString( int ); // Pretty with punctuation chars
	const char* tokenTypeName( int ); // Just the names without punctuation chars
	bool tokenTypeIsLiteral( int );
	bool tokenTypeIsKeyword( int );
	bool tokenTypeIsSpecial( int );
	TokenType tokenTypeFromString( const QByteArray& str, int* pos = 0 );
}
#endif // __FP_TOKENTYPE__
